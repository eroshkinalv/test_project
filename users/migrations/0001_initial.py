# Generated by Django 5.1.7 on 2025-04-03 20:14

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("company", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, verbose_name="date joined")),
                ("first_name", models.CharField(blank=True, max_length=150, verbose_name="Имя")),
                ("last_name", models.CharField(blank=True, max_length=150, verbose_name="Фамилия")),
                ("email", models.EmailField(max_length=254, unique=True, verbose_name="Email")),
                ("phone", models.CharField(blank=True, max_length=120, null=True, verbose_name="Телефон")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        default="/profile_img/ava_001.png",
                        null=True,
                        upload_to="profile_img/",
                        verbose_name="Аватар",
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=120, null=True, verbose_name="Страна")),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Менеджер", "Менеджер"), ("Пользователь", "Пользователь")],
                        max_length=250,
                        null=True,
                        verbose_name="Статус",
                    ),
                ),
                ("is_blocked", models.BooleanField(default=False, verbose_name="Блокировка пользователя")),
                ("is_active", models.BooleanField(default=True, verbose_name="Блокировка пользователя")),
                ("token", models.CharField(blank=True, max_length=100, null=True, verbose_name="Токен")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateTimeField(auto_now_add=True, verbose_name="Дата оплаты")),
                ("quantity", models.PositiveIntegerField(blank=True, null=True, verbose_name="Количество товара")),
                ("payment_amount", models.PositiveIntegerField(default=0, verbose_name="Сумма оплаты")),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("Наличные", "Наличные"), ("Перевод на счет", "Перевод на счет")],
                        max_length=250,
                        verbose_name="Способ оплаты",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(blank=True, max_length=250, null=True, verbose_name="id сессии платежа"),
                ),
                (
                    "payment_link",
                    models.URLField(blank=True, max_length=400, null=True, verbose_name="Ссылка на оплату"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        help_text="complete(оплачен)/expired(не действителен)/open(ожидает оплаты)",
                        max_length=250,
                        null=True,
                        verbose_name="Статус платежа",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="company.item",
                        verbose_name="Оплаченный товар",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Платеж",
                "verbose_name_plural": "Платежи",
            },
        ),
    ]
