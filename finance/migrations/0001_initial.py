# Generated by Django 5.1.7 on 2025-04-13 02:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("company", "0009_remove_itemprice_item_remove_itemprice_owner_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BalanceSheet",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("balance", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Время создания")),
                ("updated_at", models.DateTimeField(auto_now_add=True, verbose_name="Время обновления")),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="company.company",
                        verbose_name="Пользователь",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ItemPrice",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("price_per_item", models.PositiveIntegerField(verbose_name="Цена за единцу товара")),
                (
                    "quantity_available",
                    models.PositiveIntegerField(default=0, verbose_name="Количество изделий на складе"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="company.item",
                        verbose_name="Изделие",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Цена",
                "verbose_name_plural": "Цены",
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("quantity", models.IntegerField(default=1, verbose_name="Количество")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Время создания")),
                (
                    "order_item",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="company.item",
                        verbose_name="Изделие",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заказанный товары",
                "verbose_name_plural": "Заказанные товары",
            },
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("ordered", models.BooleanField(default=False)),
                ("total", models.IntegerField(blank=True, null=True, verbose_name="Сумма заказа")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="Время создания")),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Заказчик",
                    ),
                ),
                (
                    "order_items",
                    models.ManyToManyField(
                        related_name="order_items", to="finance.orderitem", verbose_name="Заказанные издения"
                    ),
                ),
            ],
            options={
                "verbose_name": "Корзина",
                "verbose_name_plural": "Корзины",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("date", models.DateTimeField(auto_now_add=True, verbose_name="Дата оплаты")),
                ("quantity", models.PositiveIntegerField(blank=True, null=True, verbose_name="Количество товара")),
                ("payment_amount", models.PositiveIntegerField(default=0, verbose_name="Сумма оплаты")),
                (
                    "payment_method",
                    models.CharField(
                        choices=[("Наличные", "Наличные"), ("Перевод на счет", "Перевод на счет")],
                        max_length=250,
                        verbose_name="Способ оплаты",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(blank=True, max_length=250, null=True, verbose_name="id сессии платежа"),
                ),
                (
                    "payment_link",
                    models.URLField(blank=True, max_length=400, null=True, verbose_name="Ссылка на оплату"),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        help_text="complete(оплачен)/expired(не действителен)/open(ожидает оплаты)",
                        max_length=250,
                        null=True,
                        verbose_name="Статус платежа",
                    ),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="finance.cart",
                        verbose_name="Оплаченный товар",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Платеж",
                "verbose_name_plural": "Платежи",
            },
        ),
    ]
